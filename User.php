<?php 
//Michelle Lai
//CS 174 Sec 2, Project
//User page

//Uncomment lines 135 and 136 to test functions

//Database table information
//admin (username, password) 
    //table is auto created, entry is auto added
//infected (name, sequence)
    //table is auto created, entries are auto added

require_once 'login.php'; //for login and database information
require_once 'sql-functions.php'; //php functions for sql


//html
echo <<<_END
<html>
<head>
<title>Malware Signature Detection</title>
</head>
<body>
<form method="POST" action="User.php" enctype="multipart/form-data">
    <p>Upload a text (.txt) file to check if it contains malware:</p>
    <input type="file" name="filename" size="10"></input><br/>
    <input type="submit" value="Examine File for Malware"></input>
</form>
_END;

//check if the file has been uploaded
if ($_FILES) {
    //get the type of the file uploaded and checks the extension is .txt
    $type = $_FILES['filename']['type'];
    $ext = get_file_ext_txt($type);

    //check if the extension is valid (.txt)
    if($ext) {
        //set and get the pre-chosen file name then save the file with this name
        $name = set_uploaded_name_txt("input");
        move_uploaded_file($_FILES['filename']['tmp_name'], $name);
        //display message to inform of the uploaded file's name
        echo "Uploaded file as '$name'</br></br>";
       
        //load the whole file in a string
        $file_contents = file_get_contents($name);
        
        //create connection
        $conn = new mysqli($hn, $un, $pw, $db);
        if ($conn->connect_error) die($conn->connect_error); 

        //ensure database specified in login file exists
        if(!check_database_exists($conn, $db)) {
            $conn->close();
            die("Error: Database does not exist.");
        }

        //remove any whitespace, including spaces, newlines, etc
        $file_contents = preg_replace('/\s+/', '', $file_contents);
        //sanitize the file contents
        $file_contents = mysql_entities_fix_string($conn, $file_contents);

        //if files contains at least one malware signature sequence
        $table = "infected";
        if(contains_malware_sequence($conn, $table, $file_contents)) {
            //print the matches found and a warning to the user
            echo "</br>Warning: This file contains malware! </br>";
        }
        else {
            //print a no result found, but inform user to still be careful
            //since only KNOWN to db signatures are stored, not all
            echo "</br>Cannot find known malware in file. Remain cautious still! </br>";
        }
        $conn->close();
    }
    else {
        //get the uploaded file's name to display error
        $name = $_FILES['filename']['name']; 
        die("Error: $name is not the correct file type.");
    }
}
else echo "No text file has been uploaded. ";
echo "</body></html>";

/*
    Checks if the given file contents contains at least one known malware signature 
    File contents are compared and searched for matches in the database, several matches can be found
    If the table doesn't exist, it will be created with (name, sequence) columns
    @param conn: connection to the database, allowing modifications and queries to be performed
    @param table: table that contains the known malware sequences
    @param file_contents: sanitized string of the entire file submitted by the user
    @return true/false if the file contains at least one malware signature sequence
*/
function contains_malware_sequence($conn, $table, $file_contents) {
    $contains = false;
    //check if table already exists, if not, create it
    if(!check_table_exists($conn, $table)) {
        //if doesn't exist, create with name and sequence column
        $nameColumn = "name VARCHAR(30) UNIQUE";
        $seqColumn = "sequence VARCHAR(20) UNIQUE";
        $columns = array($nameColumn, $seqColumn);
        create_table($conn, $table, $columns);
        // echo "Table created: $table </br>";
    }
    //get all known malware sequences from the db
    //create and execute query
    $query = "SELECT * FROM $table";
    $result = $conn->query($query);        
    if(!$result) die ("Access failed: " . $conn->error);
    //for each row in the query result, check if file contains the sequence
    for($index = 0; $index < $result->num_rows; $index++) {
        //set the current row then get associative array for it
        $result->data_seek($index);
        $row = $result->fetch_array(MYSQLI_ASSOC);
        //get the sequence column for the current row
        $seq = $row['sequence'];
        //check if file contains the sequence
        if(strpos($file_contents, $seq) !== false) {
            $malwareName = $row['name'];
            echo "Sequence match found. Detected malware \"$malwareName\"</br>";
            $contains = true;
            //continue iteration to allow detection of multiple malware seq
        }
    }
    $result->close();
    return $contains;
}


$testConn = new mysqli($hn, $un, $pw, $db);
if ($testConn->connect_error) die($testConn->connect_error);

//uncomment to test the fuctions
// test_functions_user($testConn);
// test_functions_sql($testConn, $db);

/*
    Tests the functions in the "User.php" class
    Function(s) tested: contains_malware_sequence
*/
function test_functions_user($testConn) {
    //testing contains_malware_sequence
    echo "</br></br></br></br>Testing contains_malware_sequence function";    
    echo "---------------------------------------------------------------------</br>";

    echo "Check TesttestingfunctionsTest for malware sequence, result = "
        . contains_malware_sequence($testConn, "test", "TesttestingfunctionsTest") . "</br>";
    echo "Check noMatches for malware sequence, result = "
        . contains_malware_sequence($testConn, "test", "noMatches") . "</br>";
}

/* 
    Tests the functions in the "sql-functions.php" class
    Function(s) tested: get_file_ext_txt, set_uploaded_name_txt, 
        check_database_exists, check_table_exists, create_table
*/
function test_functions_sql($testConn, $db) {
    //for testing the check_database_exists, check_table_exists functions
    echo "</br>Testing check_database_exists and check_table_exists functions";
    echo "---------------------------------------------------------------------------------------------";
    echo "</br>Exist database named $db? => " . check_database_exists($testConn, $db);
    echo "</br>Exist table named admin? => " . check_table_exists($testConn, "admin");
    echo "</br>Exist table named user? => " . check_table_exists($testConn, "user");

    //for testing create_table
    echo "</br></br>Testing create_table";
    echo "---------------------------------------------------------------------------------------------";
    $v = array("column1 VARCHAR(30)", "column2 INT");
    echo "</br>Create table named test result (no result if already created) => ";
    if(!check_table_exists($testConn, "test")) {
        create_table($testConn, "test", $v);
    }
    
    //test the get_file_ext_txt function
    echo "</br></br>Testing get_file_ext_txt function";
    echo "---------------------------------------------------------------------------------------------";        
    echo "</br>For application/pdf = " . get_file_ext_txt("application/pdf");
    echo "</br>For image/png = " . get_file_ext_txt("image/png");
    echo "</br>For text/html = " . get_file_ext_txt("text/html");
    echo "</br>For text/xml = " . get_file_ext_txt("text/xml");
    echo "</br>For type = " . get_file_ext_txt("type");
    echo "</br>For 12 = " . get_file_ext_txt(12);
    echo "</br>For TRUE = " . get_file_ext_txt(TRUE);
    echo "</br>For null = " . get_file_ext_txt(null);
    echo "</br>For text/plain  = " . get_file_ext_txt("text/plain");
    
    //test the set_uploaded_name_txt function
    echo "</br></br>Testing set_uploaded_name_txt function";
    echo "------------------------------------------------------------------------------------";    
    echo "</br>For null = "; $name = set_uploaded_name_txt(null); echo ", $name";
    echo "</br>For 1234 = "; $name = set_uploaded_name_txt(1234); echo ", $name";
    echo "</br>For name1234 = "; $name = set_uploaded_name_txt("name1234"); echo "$name";
    echo "</br>For TRUE = "; $name = set_uploaded_name_txt(TRUE); echo ", $name";
    echo "</br>For FALSE = "; $name = set_uploaded_name_txt(FALSE); echo ", $name";
    echo "</br>For TEXT NAME = "; $name = set_uploaded_name_txt("TEXT NAME"); echo "$name";
    echo "</br>For name./() = "; $name = set_uploaded_name_txt("name./()"); echo "$name";
    echo "</br>For text = "; $name = set_uploaded_name_txt("text"); echo "$name";
    echo "</br>For validname = "; $name = set_uploaded_name_txt("validname"); echo "$name";
}
$testConn->close();


?>