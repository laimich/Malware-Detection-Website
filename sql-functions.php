<?php 
//Michelle Lai
//CS 174 Sec 2, Project
//Php functions for sql

//Database table information
//admin (username, password) 
    //table is auto created, entry is auto added
//infected (name, sequence)
    //table is auto created, entries are auto added

/*
    Sanitizes the given input string for html entities, slashes, tags, and escape characters
    Calls another function to perform the last three sanitizations, prevents sql and xss code injections
    Received from CS 174 Lecture 17 slides
    @param conn: connection to sql for the database for sanitizing the escape characters
    @param string: input string to clean 
    @return fully sanitized string result
*/
function mysql_entities_fix_string($conn, $string)
{
    return htmlentities(mysql_fix_string($conn, $string));
}

/*
    Sanitizes the given input for slashes, tags, and escape characters
    Prevents code injection through the sanitization
    Calls another function to sanitize the last three, prevents code injection
    Received from CS 174 Lecture 17 slides
    @param conn: connection to sql for the database for sanitizing the escape characters
    @return sanitized string result
*/
function mysql_fix_string($conn, $string)
{
    if (get_magic_quotes_gpc()) {
        $string = stripslashes($string);
        $string = strip_tags($string);
    }
    return $conn->real_escape_string($string);
}

/*
    Checks the uploaded file's type and sets the extension 
    If it's a text file the extension will be .txt, otherwise it will be null
    @param type: type of the file to check
    @return extension of the file
*/
function get_file_ext_txt($type) {
    if(!is_string($type)) {
        echo "Error: Type of file cannot be determined. ";
        $type = "";
    }
    $ext = "";
    //check if the type is text, then set extension to txt
    if($type == 'text/plain') $ext = 'txt';
    return $ext;
}

/*
    Set a pre-chosen name and the .txt extension for the uploaded file 
    @param prechosen: pre-chosen name to be used for the uploaded file
    @return name with extension of the uploaded file
*/
function set_uploaded_name_txt($prechosen) {
    //if input isn't a string, set the name to "text_file" instead
    if(!is_string($prechosen)) {
        echo "Error: Pre-chosen name must be a string, setting to \"textfile\" ";
        $prechosen = "textfile";
    }  
    //sanitize the pre-chosen name for incorrect inputs
    $prechosen = strtolower(preg_replace("/[^A-Za-z0-9]/", "", $prechosen));  
    //set the pre-chosen name as text and extension as .txt
    $name = "$prechosen.txt";
    //if filename exists, iterate to add number to name until unsued filename found
    if(file_exists($name)) {
        //echo "Error: File exists, number added to the end. ";
        $num_exists = 1;
        while(file_exists($name)) {
            $name = $prechosen . $num_exists . ".txt";
            $num_exists++;
        }
    }
    return $name;
}

/*
    Check if the database exists for the specified user's connection
    @param conn: connection to the mysql database
    @param db: name of the database to check existence 
    @return true/false if the database exists
*/
function check_database_exists($conn, $db) {
    //create then execute query
    $query = "SHOW DATABASES LIKE '".$db."'";
    $result = $conn->query($query);
    if(!$result) die ("Access failed: " . $conn->error);
    if($result->num_rows == 1) {
        //use this database, only when it already exists
        $query = "USE $db";
        $result = $conn->query($query);
        if(!$result) die ("Access failed: " . $conn->error);
        return true;
    }
    $result->close();
    return false;
}

/*
    Check if the table exists for the specified user's connection and the current database
    @param conn: connection to the mysql database
    @param table: name of the table to check existence within the current database
    @return true/false if the table exists
*/
function check_table_exists($conn, $table) {
    //create then execute query
    $query = "SHOW TABLES LIKE '".$table."'";
    $result = $conn->query($query);    
    if (!$result) die ("Access failed: " . $conn->error);
    //if query has one result, then table exists
    if($result->num_rows == 1) {
        $result->close();
        return true;
    }
    $result->close();
    return false;
}

/*
    Create the table with the given connection and table name
    The names and types of the columns/attributes for the table will be in the array
    @param conn: connection to the mysql database
    @param table: name of the table to use
    @param columnInfo: array of column names and their types
*/
function create_table($conn, $table, $columnInfo) {
    //setup columns part of sql for each value based on the array
    $sqlColumns = "";
    for($x = 0; $x < count($columnInfo); $x++) {
        $sqlColumns .= $columnInfo[$x];
        if($x != count($columnInfo)-1) {
            $sqlColumns .=  ", ";
        }
    }
    //create then execute query
    $query = "CREATE TABLE $table ($sqlColumns)";
    $result = $conn->query($query);        
    if (!$result) die ("Access failed: " . $conn->error);
}

?>